version: '3.8'

services:
  database:
    image: postgres:15
    container_name: postgres_container
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data

  migrations:
    image: node:latest
    working_dir: /app
    command: >
      sh -c "npm init -y &&
         npm install sequelize sequelize-cli pg mysql2 &&
         if [ ! -f config/config.json ]; then
           npx sequelize-cli init
         fi &&
         if [ -f config/config.json ]; then
           sed -i 's/\"username\": \"root\"/\"username\": \"postgres\"/' config/config.json &&
           sed -i 's/\"password\": null/\"password\": \"password\"/' config/config.json &&
           sed -i 's/\"database\": \"database_development\"/\"database\": \"postgres\"/' config/config.json &&
           sed -i 's/\"host\": \"127.0.0.1\"/\"host\": \"database\"/' config/config.json &&
           sed -i 's/\"dialect\": \"mysql\"/\"dialect\": \"postgres\"/' config/config.json
         fi &&
         npx sequelize-cli db:migrate"
    depends_on:
      - database
    environment:
      DATABASE_URL: postgres://postgres:password@database:5432/postgres
      NODE_ENV: development
    volumes:
      - ./migrations:/app/migrations:delegated  # This will copy the local migrations to the container's migrations folder
    restart: on-failure

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: node_app
    environment:
      DATABASE_URL: postgres://postgres:password@database:5432/postgres
    ports:
      - "3000:3000"
    depends_on:
      - database
      - migrations

volumes:
  db_data: {}
